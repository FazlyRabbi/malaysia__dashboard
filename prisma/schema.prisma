datasource db {
  provider = "postgresql"
  url      = "postgresql://recharge_owner:xnM91QCwdIvj@ep-aged-math-a5131neg.us-east-2.aws.neon.tech/recharge?sslmode=require"
}

generator client {
  provider = "prisma-client-js"
}

model DataPack {
  id           Int    @id @default(autoincrement())
  oparetor     String
  pack         String
  discount     String
  todayPrice   String
  officalPrice String
  validity     String
}

model MinutePack {
  id           Int    @id @default(autoincrement())
  oparetor     String
  pack         String
  discount     String
  todayPrice   String
  officalPrice String
  validity     String
}

model BundlePack {
  id           Int    @id @default(autoincrement())
  oparetor     String
  pack         String
  discount     String
  todayPrice   String
  officalPrice String
  validity     String
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  phone    String  @unique
  password String
  image    String?
  token    String? @default("0")
  role     String  @default("client")
}

model Order {
  id        Int      @id @default(autoincrement())
  offer     String
  phone     String
  division  String
  status    String   @default("pending")
  price     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payment {
  id                    Int     @id @default(autoincrement())
  user                  String
  paymentID             String?
  payerReference        String?
  customerMsisdn        String?
  trxID                 String?
  amount                String?
  statusMessage         String?
  paymentExecuteTime    String?
  merchantInvoiceNumber String?
}

// model Client {
//  id Int @id @default(autoincrement())

//   date     String?
//   visa     String?
//   fullName String?
//   country  String?
//   passport String?
//   status   String  @default("proccesing")

//   // Relation to Group
//   groupId Int?
//   group   Group? @relation(fields: [groupId], references: [id])

//   // Relation to Record
//   recordId Int?
//   record   Record? @relation(fields: [recordId], references: [id])
// }

// model Group {
//   id      Int      @id @default(autoincrement())
//   name    String
//   clients Client[]
// }

// model Record {
//   id      Int      @id @default(autoincrement())
//   content String
//   clients Client[]
// }
